{"version":3,"sources":["webpack://project-flag/./src/js/modules/ProjectFlag.js","webpack://project-flag/./src/js/project-flag.js"],"names":["element","this","innerHTML","projectFlags","document","getElementsByClassName","length","Array","prototype","filter","call","projectFlag","ProjectFlag","render","htmlStrings","forEach","htmlString","addString","html","width","offsetWidth","style","height","clientHeight","speed","parseInt","dataset","i","additionalClass","cssDelay","cssTime","push","join","init","build"],"mappings":"qMAYE,WAAYA,GAIV,O,4FAJmB,SACnBC,KAAKD,QAAUA,EACfC,KAAKC,UAAY,KAEVD,K,2CAuCT,WACE,IAAME,EAAeC,SAASC,uBAAuB,mBAErD,QAAIF,EAAaG,SACfC,MAAMC,UAAUC,OAAOC,KAAKP,GAAc,SAACQ,GACzC,IAAIC,EAAYD,GAAaE,aAGxB,O,2BArCX,WAA6B,WAAlBC,EAAkB,uDAAJ,GAOvB,OANAb,KAAKC,UAAY,GAEjBY,EAAYC,SAAQ,SAACC,GACnB,EAAKC,UAAUD,MAGVf,O,uBAST,SAAUe,GAGR,OAFAf,KAAKC,WAAL,4CAAuDc,EAAvD,UAEOf,O,kBA6BT,WAEMA,KAAKC,YACPD,KAAKD,QAAQE,UAAYD,KAAKC,WAGhC,IAAMgB,EAAO,GACPC,EAAQlB,KAAKD,QAAQoB,YAG3BnB,KAAKD,QAAQqB,MAAMF,MAAnB,UAA8BA,EAA9B,MACAlB,KAAKD,QAAQqB,MAAMC,OAAnB,UAA+BrB,KAAKD,QAAQuB,aAA5C,MAMA,IAJA,IAAMC,EAAQC,SAASxB,KAAKD,QAAQ0B,QAAQ,sBAAuB,KAAO,IAIjEC,EAAI,EAAGA,EAHG,EAGaA,GAAK,EAAG,CACtC,IAAMC,EAAkB,wBAAH,OAA2BD,GAC1CE,EAAW,qBAAH,OAAwBL,EAAQG,EAAhC,OACRG,EAAU,uBAAH,OANI,EAMsBN,EAA1B,OAEbN,EAAKa,KAAL,+DAC+CH,EAD/C,oBAC0EC,EAD1E,YACsFC,EADtF,uDAEoCF,EAFpC,6BAEyET,EAFzE,mBAEuFU,EAFvF,YAEmGC,EAFnG,2BAGQ7B,KAAKD,QAAQE,UAHrB,uCAUF,OAFAD,KAAKD,QAAQE,UAAYgB,EAAKc,KAAK,IAE5B/B,O,oBAOT,WACEA,KAAKgC,Y,iCChHGC,S","file":"assets/js/project-flag.min.js","sourcesContent":["/**\n * Создание флага из html элемента\n * @class\n * @example new ProjectFlag(document.document.getElementsById('project-flag')).render();\n */\nexport default class ProjectFlag {\n  /**\n   * @constructor\n   * @property {Element} element массив html строк\n   * @example new ProjectFlag(element).render();\n   * @return this\n   */\n  constructor(element) {\n    this.element = element;\n    this.innerHTML = null;\n\n    return this;\n  }\n\n  /**\n   * Заменить контент\n   * @method\n   * @property {Array} htmlStrings массив html строк\n   * @example new ProjectFlag().setContent([$elem.html(), '<a href='/'>Вернуться</a>']).render();\n   * @return this\n   */\n  setContent(htmlStrings = []) {\n    this.innerHTML = '';\n\n    htmlStrings.forEach((htmlString) => {\n      this.addString(htmlString);\n    });\n\n    return this;\n  }\n\n  /**\n   * Добавить строку в разметку\n   * @method\n   * @property {String} htmlString html строка\n   * @return this\n   */\n  addString(htmlString) {\n    this.innerHTML += `<div class=\"project-flag--string\">${htmlString}</div>`;\n\n    return this;\n  }\n\n  /**\n   * Собрать все флаги с классом js-project-flag. Ленивый метод. Возвращает true в случае успеха\n   * @method\n   * @static\n   * @example ProjectFlag.build();\n   * @return boolean\n   */\n  static build() {\n    const projectFlags = document.getElementsByClassName('js-project-flag');\n\n    if (projectFlags.length) {\n      Array.prototype.filter.call(projectFlags, (projectFlag) => {\n        new ProjectFlag(projectFlag).render();\n      });\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Инициализация флага\n   * @method\n   * @return this\n   */\n  init() {\n    // Заменить контент если был передан в js\n    if (this.innerHTML) {\n      this.element.innerHTML = this.innerHTML;\n    }\n\n    const html = [];\n    const width = this.element.offsetWidth;\n\n    // Фиксировать размер\n    this.element.style.width = `${width}px`;\n    this.element.style.height = `${this.element.clientHeight}px`;\n\n    const speed = parseInt(this.element.dataset['project-flag-speed'], 10) || 1000;\n    const linesCount = 4;\n\n    // Создать копию контента\n    for (let i = 0; i < linesCount; i += 1) {\n      const additionalClass = `--animation _--delay-${i}`;\n      const cssDelay = `animation-delay: -${speed * i}ms;`;\n      const cssTime = `animation-duration: ${speed * linesCount}ms;`;\n\n      html.push(`\n        <div class=\"project-flag--strings --active ${additionalClass}\" style=\"${cssDelay} ${cssTime}\">\n          <div class=\"project-flag--box ${additionalClass}\" style=\"width: ${`${width}px`}; ${cssDelay} ${cssTime}\">\n            ${this.element.innerHTML}\n          </div>\n        </div>`);\n    }\n\n    this.element.innerHTML = html.join('');\n\n    return this;\n  }\n\n  /**\n   * Инициализация флага\n   * @method\n   */\n  render() {\n    this.init();\n  }\n}\n","import ProjectFlag from './modules/ProjectFlag';\n\nProjectFlag.build();\n"],"sourceRoot":""}